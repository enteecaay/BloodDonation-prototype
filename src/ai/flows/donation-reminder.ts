// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for sending personalized donation reminders to users via email and SMS,
 * tailored to their last donation date.
 *
 * - sendDonationReminder - A function that sends donation reminders.
 * - SendDonationReminderInput - The input type for the sendDonationReminder function.
 * - SendDonationReminderOutput - The return type for the sendDonationReminder function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SendDonationReminderInputSchema = z.object({
  userName: z.string().describe('The name of the donor.'),
  email: z.string().email().describe('The email address of the donor.'),
  phoneNumber: z.string().describe('The phone number of the donor.'),
  lastDonationDate: z
    .string()
    .describe('The last donation date of the donor in ISO format (YYYY-MM-DD).'),
  timeSinceLastDonation: z.number().describe('The time in days since the last donation.'),
});
export type SendDonationReminderInput = z.infer<typeof SendDonationReminderInputSchema>;

const SendDonationReminderOutputSchema = z.object({
  emailContent: z.string().describe('The content of the email reminder.'),
  smsContent: z.string().describe('The content of the SMS reminder.'),
});
export type SendDonationReminderOutput = z.infer<typeof SendDonationReminderOutputSchema>;

export async function sendDonationReminder(input: SendDonationReminderInput): Promise<SendDonationReminderOutput> {
  return sendDonationReminderFlow(input);
}

const prompt = ai.definePrompt({
  name: 'sendDonationReminderPrompt',
  input: {schema: SendDonationReminderInputSchema},
  output: {schema: SendDonationReminderOutputSchema},
  prompt: `You are an expert in crafting personalized donation reminders. You will generate an email and SMS reminder for a blood donor based on their last donation date.

  Donor Name: {{{userName}}}
  Email: {{{email}}}
  Phone Number: {{{phoneNumber}}}
  Last Donation Date: {{{lastDonationDate}}}
  Time Since Last Donation: {{{timeSinceLastDonation}}} days

  Create a personalized email and SMS reminder to encourage them to donate again.  The email should be friendly and informative, highlighting the impact of their donation. The SMS should be a concise reminder with a call to action.
  The tone should be encouraging, and not demanding or pushy.
`,
});

const sendDonationReminderFlow = ai.defineFlow(
  {
    name: 'sendDonationReminderFlow',
    inputSchema: SendDonationReminderInputSchema,
    outputSchema: SendDonationReminderOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
